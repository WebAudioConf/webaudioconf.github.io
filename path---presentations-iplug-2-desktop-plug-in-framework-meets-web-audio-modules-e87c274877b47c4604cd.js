webpackJsonp([84377682486360],{475:function(e,a){e.exports={pathContext:{abstract:"This paper introduces iPlug 2: a desktop C++ audio plug-in framework that has been extended and reworked in order to support Web Audio Modules, a new format for browser-based audio effects and instruments, using WebAssembly. iPlug 2 provides a complete solution and workflow for the development of cross-platform audio plug-ins and apps. It allows the same concise C++ code to be used to create desktop and web-based versions of a software musical instrument or audio effect, including audio signal processing and user interface elements. This new version of the framework has been updated to increase its flexibility so that alternative drawing APIs, plug-in APIs and platform APIs can be supported easily. We have added support for the distributed models used in recent audio plug-in formats, as well as new graphics capabilities. The codebase has also been substantially modernised. In this paper, we introduce the problems that iPlug 2 aims to address and discuss trends in modern plug-in APIs and existing solutions. We then present iPlug 2 and the work required to refactor a desktop plug-in framework to support the web platform. Several approaches to implementing graphical user interfaces are discussed as well as creating remote editors using web technologies. A real-world example of a WAM compiled with iPlug 2 is hosted at https://virtualcz.io, a new web-based version of a commercially available synthesizer plug-in.",authors:[{link:"http://www.olilarkin.co.uk/",name:"Oliver Larkin"},{name:"Alex Harker"},{name:"Jari Kleimola"}],slug:"iplug2-desktop-plug-in-framework-meets-web-audio-modules",title:"iPlug2: Desktop Plug-in Framework Meets Web Audio Modules",type:"paper"}}}});
//# sourceMappingURL=path---presentations-iplug-2-desktop-plug-in-framework-meets-web-audio-modules-e87c274877b47c4604cd.js.map