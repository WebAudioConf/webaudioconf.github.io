webpackJsonp([0xcc7f8c238ae7],{483:function(e,a){e.exports={pathContext:{abstract:"Several native audio plug-in formats are popular today including Steinberg’s VST, Apple’s Audio Units, Avid’s AAX and the Linux audio community’s LV2. Although the APIs are different, all exist to achieve more or less the same thing - represent an instrument or audio effect and allow it to be loaded by a host application. In the Web Audio API such a high-level audio plug-in entity does not exist. With the emergence of web-based audio software such as digital audio workstations (DAWs), it is desirable to have a standard in order to make Web Audio instruments and effects interoperable. Since there are many ways of developing for Web Audio, such a standard should be flexible enough to support different approaches, including using a variety of programming languages. New functionality that is enabled by the web platform should be available to plug-ins written in different ways. To this end, several groups of developers came together to make their work compatible, and this paper presents the work achieved so far. This includes the development of a draft API specification, a small preliminary SDK, online plug-in validators and a set of examples written in JavaScript. These simple, proof of concept examples show how to discover plug-ins from repositories, how to instantiate a plug-in and how to connect plug-ins together. A more ambitious host has also been developed to validate the WAP standard: a virtual guitar “pedal board” that discovers plug-ins from multiple remote repositories, and allows the musician to chain pedals and control them via MIDI.",authors:[{name:"Michel Buffa"},{name:"Jerome Lebrun"},{name:"Jari Kleimola"},{name:"Oliver Larkin"},{name:"Stéphane Letz"},{name:"Guillaume Pellerin"}],slug:"wap-ideas-for-a-web-audio-plug-in-standard",title:"WAP: Ideas for a Web Audio Plug-in Standard",type:"paper"}}}});
//# sourceMappingURL=path---presentations-wap-ideas-for-a-web-audio-plug-in-standard-8325b60005b69be04774.js.map